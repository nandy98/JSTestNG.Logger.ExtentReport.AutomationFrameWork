<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-04T09:47:03 IST" name="Default suite" finished-at="2024-06-04T09:47:11 IST" duration-ms="7910">
    <groups>
    </groups>
    <test started-at="2024-06-04T09:47:03 IST" name="Default test" finished-at="2024-06-04T09:47:11 IST" duration-ms="7910">
      <class name="testCases.TC_LoginTest_001">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:testCases.TC_LoginTest_001@177bea38]" started-at="2024-06-04T09:47:03 IST" name="setup" finished-at="2024-06-04T09:47:06 IST" duration-ms="2700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest()[pri:0, instance:testCases.TC_LoginTest_001@177bea38]" started-at="2024-06-04T09:47:06 IST" name="loginTest" finished-at="2024-06-04T09:47:10 IST" duration-ms="4665" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter 'srcDir' is not a directory: 'C:\Users\NANDLA~1.YAD\AppData\Local\Temp\screenshot7849422340289113446.png']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter 'srcDir' is not a directory: 'C:\Users\NANDLA~1.YAD\AppData\Local\Temp\screenshot7849422340289113446.png'
at org.apache.commons.io.FileUtils.requireDirectoryExists(FileUtils.java:2789)
at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:711)
at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:657)
at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:556)
at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:527)
at testCases.BaseClass.captureScreen(BaseClass.java:74)
at testCases.TC_LoginTest_001.loginTest(TC_LoginTest_001.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_LoginTest_001@177bea38]" started-at="2024-06-04T09:47:10 IST" name="tearDown" finished-at="2024-06-04T09:47:11 IST" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_LoginTest_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
